10K <- read.table("~/Documents/GitHub/Shelly_Pgenerosa/analyses/CompareGenomeVersions/20190214_10K/bismark_summary_report.txt")
tenK <- read.table("~/Documents/GitHub/Shelly_Pgenerosa/analyses/CompareGenomeVersions/20190214_10K/bismark_summary_report.txt")
tenK <- read.table("~/Documents/GitHub/Shelly_Pgenerosa/analyses/CompareGenomeVersions/20190214_10K/bismark_summary_report.txt", sep ="\t")
View(tenK)
tenK <- read.table("~/Documents/GitHub/Shelly_Pgenerosa/analyses/CompareGenomeVersions/20190214_10K/bismark_summary_report.txt", sep ="\t", header = TRUE)
tenK$sample <- substr(tenK$File,5,7)
tenK$genome <- "10K"
tenK <- read.table("~/Documents/GitHub/Shelly_Pgenerosa/analyses/CompareGenomeVersions/20190214_10K/bismark_summary_report.txt", sep ="\t", header = TRUE)
tenK$sample <- substr(tenK$File,5,7)
tenK$genome <- "10K"
thirtyK <- read.table("~/Documents/GitHub/Shelly_Pgenerosa/analyses/CompareGenomeVersions/20190214_30K/bismark_summary_report.txt", sep ="\t", header = TRUE)
thirtyK$sample <- substr(thirtyK$File,5,7)
thirtyK$genome <- "30K"
threehundK <- read.table("/Volumes/web/metacarcinus/Pgenerosa/20181101/bismark_summary_report.txt", sep ="\t", header = TRUE)
threehundK$sample <- substr(threehundK$File,5,7)
threehundK$genome <- "300K"
all_data <- rbind(tenK, thirtyK, threehundK)
View(all_data)
all_data <- all_data[grep("111|113|119|120", all_data$sample),]
library(ggplot2)
ggplot(all_data,aes(Aligned.Reads)) + geom_bar
ggplot(all_data,aes(Aligned.Reads)) + geom_bar()
ggplot(all_data$Aligned.Reads,aes(genome))) + geom_bar()
ggplot(all_data$Aligned.Reads,aes(genome)) + geom_bar()
ggplot(all_data,aes(genome)) + geom_bar()
ggplot(all_data,aes(sample)) + geom_bar()
ggplot(all_data,aes(x = sample, y = Aligned.Reads, fill = sample)) + geom_bar()
ggplot(all_data,aes(x = sample, y = Aligned.Reads, fill = sample)) + geom_bar(color = "black", stat = "identity")
ggplot(all_data,aes(x = sample, y = Aligned.Reads, fill = sample)) + geom_bar(color = "black", stat = "identity") + facet_wrap(~genome)
ggplot(all_data,aes(x = genome, y = Aligned.Reads, fill = genome)) + geom_bar(color = "black", stat = "identity") + facet_wrap(~sample())
ggplot(all_data,aes(x = genome, y = Aligned.Reads, fill = genome)) + geom_bar(color = "black", stat = "identity") + facet_wrap(~sample
ggplot(all_data,aes(x = genome, y = Aligned.Reads, fill = genome)) + geom_bar(color = "black", stat = "identity") + facet_wrap(~sample)
tenK <- read.table("~/Documents/GitHub/Shelly_Pgenerosa/analyses/CompareGenomeVersions/20190214_10K/bismark_summary_report.txt", sep ="\t", header = TRUE)
tenK$sample <- substr(tenK$File,5,7)
tenK$genome <- 10000
thirtyK <- read.table("~/Documents/GitHub/Shelly_Pgenerosa/analyses/CompareGenomeVersions/20190214_30K/bismark_summary_report.txt", sep ="\t", header = TRUE)
thirtyK$sample <- substr(thirtyK$File,5,7)
thirtyK$genome <- 30000
threehundK <- read.table("/Volumes/web/metacarcinus/Pgenerosa/20181101/bismark_summary_report.txt", sep ="\t", header = TRUE)
threehundK$sample <- substr(threehundK$File,5,7)
threehundK$genome <- 300000
#merge data
all_data <- rbind(tenK, thirtyK, threehundK)
#select only 111,113, 119,120
all_data <- all_data[grep("111|113|119|120", all_data$sample),]
library(ggplot2)
ggplot(all_data,aes(x = genome, y = Aligned.Reads, fill = genome)) + geom_bar(color = "black", stat = "identity") + facet_wrap(~sample)
tenK <- read.table("~/Documents/GitHub/Shelly_Pgenerosa/analyses/CompareGenomeVersions/20190214_10K/bismark_summary_report.txt", sep ="\t", header = TRUE)
tenK$sample <- substr(tenK$File,5,7)
tenK$genome <- as.character("10K")
thirtyK <- read.table("~/Documents/GitHub/Shelly_Pgenerosa/analyses/CompareGenomeVersions/20190214_30K/bismark_summary_report.txt", sep ="\t", header = TRUE)
thirtyK$sample <- substr(thirtyK$File,5,7)
thirtyK$genome <- as.character("30K")
threehundK <- read.table("/Volumes/web/metacarcinus/Pgenerosa/20181101/bismark_summary_report.txt", sep ="\t", header = TRUE)
threehundK$sample <- substr(threehundK$File,5,7)
threehundK$genome <- as.character("300K")
#merge data
all_data <- rbind(tenK, thirtyK, threehundK)
#select only 111,113, 119,120
all_data <- all_data[grep("111|113|119|120", all_data$sample),]
library(ggplot2)
ggplot(all_data,aes(x = genome, y = Aligned.Reads, fill = genome)) + geom_bar(color = "black", stat = "identity") + facet_wrap(~sample)
tenK <- read.table("~/Documents/GitHub/Shelly_Pgenerosa/analyses/CompareGenomeVersions/20190214_10K/bismark_summary_report.txt", sep ="\t", header = TRUE)
tenK$sample <- substr(tenK$File,5,7)
tenK$genome <- "10K"
thirtyK <- read.table("~/Documents/GitHub/Shelly_Pgenerosa/analyses/CompareGenomeVersions/20190214_30K/bismark_summary_report.txt", sep ="\t", header = TRUE)
thirtyK$sample <- substr(thirtyK$File,5,7)
thirtyK$genome <- "30K"
threehundK <- read.table("/Volumes/web/metacarcinus/Pgenerosa/20181101/bismark_summary_report.txt", sep ="\t", header = TRUE)
threehundK$sample <- substr(threehundK$File,5,7)
threehundK$genome <- "300K"
#merge data
all_data <- rbind(tenK, thirtyK, threehundK)
#select only 111,113, 119,120
all_data <- all_data[grep("111|113|119|120", all_data$sample),]
library(ggplot2)
ggplot(all_data,aes(x = genome, y = Aligned.Reads, fill = genome)) + geom_bar(color = "black", stat = "identity") + facet_wrap(~sample)
all_data$genome <- factor(all_data$genome, levels = c("10K", "30K", "300K"))
ggplot(all_data,aes(x = genome, y = Aligned.Reads, fill = genome)) + geom_bar(color = "black", stat = "identity") + facet_wrap(~sample)
ggplot(all_data,aes(x = genome, y = Aligned.Reads, fill = genome color = c("lightgray", "gray", "darkgray"))) + geom_bar(color = "black", stat = "identity") + facet_wrap(~sample) + theme_bw()
ggplot(all_data,aes(x = genome, y = Aligned.Reads, fill = genome, color = c("lightgray", "gray", "darkgray"))) + geom_bar(color = "black", stat = "identity") + facet_wrap(~sample) + theme_bw()
ggplot(all_data,aes(x = genome, y = Aligned.Reads, fill = genome, colors = c("lightgray", "gray", "darkgray"))) + geom_bar(color = "black", stat = "identity") + facet_wrap(~sample) + theme_bw()
ggplot(all_data,aes(x = genome, y = Aligned.Reads, fill = genome)) + geom_bar(color = "black", stat = "identity") + facet_wrap(~sample) + scale_fill_manual(c("lightgray", "gray", "darkgray"))+ theme_bw()
ggplot(all_data,aes(x = genome, y = Aligned.Reads, fill = genome)) + geom_bar(color = "black", stat = "identity") + facet_wrap(~sample) + scale_fill_manual(values = c("lightgray", "gray", "darkgray"))+ theme_bw()
ggplot(all_data,aes(x = genome, y = Aligned.Reads, fill = genome)) + geom_bar(color = "black", stat = "identity") + facet_wrap(~sample) + scale_fill_manual(values = c("gray86", "gray58", "gray28"))+ theme_bw()
ggplot(all_data,aes(x = genome, y = Unique.Reads.remaining, fill = genome)) + geom_bar(color = "black", stat = "identity") + facet_wrap(~sample) + scale_fill_manual(values = c("gray86", "gray58", "gray28"))+ theme_bw()
ggplot(all_data,aes(x = genome, y = Unique.Reads..remaining., fill = genome)) + geom_bar(color = "black", stat = "identity") + facet_wrap(~sample) + scale_fill_manual(values = c("gray86", "gray58", "gray28"))+ theme_bw()
Unaligned.Reads
ggplot(all_data,aes(x = genome, y = Unaligned.Reads, fill = genome)) + geom_bar(color = "black", stat = "identity") + facet_wrap(~sample) + scale_fill_manual(values = c("gray86", "gray58", "gray28"))+ theme_bw()
all_data_alignments <- all_datap[,c(4:8,16,17)]
all_data_alignments <- all_data[,c(4:8,16,17)]
View(all_data_alignments)
all_data_alignments <- tidyr::gather(all_data_alignments, "alignment", "reads", 1:5)
ggplot(all_data_alignments,aes(x = genome, y = reads) + geom_bar(aes(fill = alignment)) + facet_wrap(~sample) + theme_bw()
ggplot(all_data_alignments,aes(x = genome, y = reads)) + geom_bar(aes(fill = alignment)) + facet_wrap(~sample) + theme_bw()
ggplot(all_data_alignments,aes(genome)) + geom_bar(aes(fill = alignment)) + facet_wrap(~sample) + theme_bw()
ggplot(all_data_alignments,aes(x = genome, y = reads)) + geom_bar(aes(fill = alignment)) + facet_wrap(~sample) + theme_bw()
ggplot(all_data_alignments,aes(x = genome, y = reads)) + geom_bar(aes(fill = alignment), stat = "identity") + facet_wrap(~sample) + theme_bw()
ggplot(all_data_alignments,aes(x = genome, y = reads)) + geom_bar(aes(fill = alignment), stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_brewer(palette = "Dark2")
ggplot(all_data_alignments,aes(x = genome, y = reads)) + geom_bar(aes(fill = alignment), stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_brewer(palette = "Dark")
ggplot(all_data_alignments,aes(x = genome, y = reads)) + geom_bar(aes(fill = alignment), stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_brewer(palette = "Dark1")
ggplot(all_data_alignments,aes(x = genome, y = reads)) + geom_bar(aes(fill = alignment), stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_brewer(palette = "Dark3")
ggplot(all_data_alignments,aes(x = genome, y = reads)) + geom_bar(aes(fill = alignment), stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_brewer(palette = "Set1")
ggplot(all_data_alignments,aes(x = genome, y = reads)) + geom_bar(aes(fill = alignment), stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_brewer(palette = "Set2")
ggplot(all_data_alignments,aes(x = genome, y = reads)) + geom_bar(aes(fill = alignment), stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_brewer(palette = "Set3")
ggplot(all_data_alignments,aes(x = genome, y = reads)) + geom_bar(aes(fill = alignment), stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_brewer(palette = "Set2")
ggplot(all_data_alignments,aes(x = genome, y = reads)) + geom_bar(aes(fill = alignment), color = "black", stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_brewer(palette = "Set2")
ggplot(all_data_alignments,aes(x = genome, y = reads)) + geom_bar(aes(fill = alignment), color = "black", stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_brewer(palette = "Spectral")
ggplot(all_data_alignments,aes(x = genome, y = reads)) + geom_bar(aes(fill = alignment), color = "black", stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_brewer(palette = "Spectral")
all_data_cytosine <- all_data[,10:17]
all_data_cytosine <- all_data[,10:17]
```
reshape data so that cytosine type is a column
```{r}
all_data_cytosine <- tidyr::gather(all_data_cytosine, "cytosine.type", "calls", 1:5)
```
make stacked bar plot
```{r}
ggplot(all_data_cytosine,aes(x = genome.contigs, y = calls)) + geom_bar(aes(fill = cytosine.type), color = "black", stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_brewer(palette = "RdGy") + ggtitle("comparing alignments resulting from different sized Pgenr genomes")
```
tenK <- read.table("~/Documents/GitHub/Shelly_Pgenerosa/analyses/CompareGenomeVersions/20190214_10K/bismark_summary_report.txt", sep ="\t", header = TRUE)
thirtyK <- read.table("~/Documents/GitHub/Shelly_Pgenerosa/analyses/CompareGenomeVersions/20190214_30K/bismark_summary_report.txt", sep ="\t", header = TRUE)
threehundK <- read.table("/Volumes/web/metacarcinus/Pgenerosa/20181101/bismark_summary_report.txt", sep ="\t", header = TRUE)
```
create column for sample number and for genome size
```{r}
tenK$sample <- substr(tenK$File,5,7)
tenK$genome.contigs <- "10K"
thirtyK$sample <- substr(thirtyK$File,5,7)
thirtyK$genome.contigs <- "30K"
threehundK$sample <- substr(threehundK$File,5,7)
threehundK$genome.contigs <- "300K"
```
merge data
```{r}
all_data <- rbind(tenK, thirtyK, threehundK)
```
select only samples 111,113,119, and 120
```{r}
all_data <- all_data[grep("111|113|119|120", all_data$sample),]
```
assign levels to order by genome size
```{r}
all_data$genome.contigs <- factor(all_data$genome.contigs, levels = c("10K", "30K", "300K"))
```
subset only alignment, sample, and genome size data for comparing in stacked bar chart
```{r}
all_data_alignments <- all_data[,c(4:8,16,17)]
```
reshape data so that alignment type is a column
```{r}
all_data_alignments <- tidyr::gather(all_data_alignments, "alignment.type", "reads", 1:5)
```
make stacked bar plot
```{r}
ggplot(all_data_alignments,aes(x = genome.contigs, y = reads)) + geom_bar(aes(fill = alignment.type), color = "black", stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_brewer(palette = "Spectral") + ggtitle("comparing alignments resulting from different sized Pgenr genomes")
```
subset only cytosine info, sample, and genome size data for comparing in stacked bar chart
```{r}
all_data_cytosine <- all_data[,10:17]
```
reshape data so that cytosine type is a column
```{r}
all_data_cytosine <- tidyr::gather(all_data_cytosine, "cytosine.type", "calls", 1:5)
```
make stacked bar plot
```{r}
ggplot(all_data_cytosine,aes(x = genome.contigs, y = calls)) + geom_bar(aes(fill = cytosine.type), color = "black", stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_brewer(palette = "RdGy") + ggtitle("comparing alignments resulting from different sized Pgenr genomes")
```
View(all_data_cytosine)
all_data_cytosine <- all_data[,10:17]
View(all_data_cytosine)
all_data_cytosine <- tidyr::gather(all_data_cytosine, "cytosine.type", "calls", 1:6)
ggplot(all_data_cytosine,aes(x = genome.contigs, y = calls)) + geom_bar(aes(fill = cytosine.type), color = "black", stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_brewer(palette = "RdGy") + ggtitle("comparing alignments resulting from different sized Pgenr genomes")
all_data_cytosine$cytosine.type <- factor(all_data_cytosine$cytosine.type, levels = c("Unmethylated.CpGs", "Methylated.CpGs", "Unmethylated.CpHs", "Methylated.CpHs", "Unmethylated.CHHs", "Methylated.CHHs"))
ggplot(all_data_cytosine,aes(x = genome.contigs, y = calls)) + geom_bar(aes(fill = cytosine.type), color = "black", stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_brewer(palette = "RdGy") + ggtitle("comparing alignments resulting from different sized Pgenr genomes")
ggplot(all_data_cytosine,aes(x = genome.contigs, y = calls)) + geom_bar(aes(fill = cytosine.type), color = "black", stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_manual(values = c("darkred", "coral", "gray28", "gray86", "darkblue", "lightskyblue2") + ggtitle("comparing alignments resulting from different sized Pgenr genomes")
ggplot(all_data_cytosine,aes(x = genome.contigs, y = calls)) + geom_bar(aes(fill = cytosine.type), color = "black", stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_manual(values = c("darkred", "coral", "gray28", "gray86", "darkblue", "lightskyblue2")) + ggtitle("comparing alignments resulting from different sized Pgenr genomes")
ggplot(all_data_cytosine,aes(x = genome.contigs, y = calls)) + geom_bar(aes(fill = cytosine.type), color = "black", stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_manual(value = c("darkred", "coral", "gray28", "gray86", "darkblue", "lightskyblue2")) + ggtitle("comparing alignments resulting from different sized Pgenr genomes")
ggplot(all_data_cytosine,aes(x = genome.contigs, y = calls)) + geom_bar(aes(fill = cytosine.type), color = "black", stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_manual(values = c("darkred", "coral", "gray28", "gray86", "darkblue", "lightskyblue2")) + ggtitle("comparing alignments resulting from different sized Pgenr genomes")
ggplot(all_data_cytosine,aes(x = genome.contigs, y = calls)) + geom_bar(aes(fill = cytosine.type), color = "black", stat = "identity", width = 0.5) + facet_wrap(~sample) + theme_bw() + scale_fill_manual(values = c("darkred", "coral", "gray28", "gray86", "darkblue", "lightskyblue2")) + ggtitle("comparing alignments resulting from different sized Pgenr genomes")
all_data_cytosine$cytosine.type <- factor(all_data_cytosine$cytosine.type, levels = c("Methylated.CpGs","Unmethylated.CpGs","Methylated.CpHs","Unmethylated.CpHs","Methylated.CHHs", "Unmethylated.CHHs"))
ggplot(all_data_cytosine,aes(x = genome.contigs, y = calls)) + geom_bar(aes(fill = cytosine.type), color = "black", stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_manual(values = c("darkred", "coral", "gray28", "gray86", "darkblue", "lightskyblue2")) + ggtitle("comparing alignments resulting from different sized Pgenr genomes")
ggplot(all_data_cytosine,aes(x = genome.contigs, y = calls)) + geom_bar(aes(fill = cytosine.type), color = "black", stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_manual(values = c("coral", "darkred", "gray86", "gray28", "lightskyblue2","darkblue",)) + ggtitle("comparing alignments resulting from different sized Pgenr genomes")
ggplot(all_data_cytosine,aes(x = genome.contigs, y = calls)) + geom_bar(aes(fill = cytosine.type), color = "black", stat = "identity") + facet_wrap(~sample) + theme_bw() + scale_fill_manual(values = c("coral", "darkred", "gray86", "gray28", "lightskyblue2","darkblue")) + ggtitle("comparing alignments resulting from different sized Pgenr genomes")
